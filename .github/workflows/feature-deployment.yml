name: Feature Branch Deployment

on:
  push:
    branches:
      - 'feature/**'
      - 'feat/**'
      - 'hotfix/**'
      - 'bugfix/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up environment
      run: |
        echo "Setting up deployment environment..."
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
    
    - name: Make deploy script executable
      run: chmod +x deploy_script.sh
    
    - name: Run deployment script
      run: ./deploy_script.sh
      env:
        BRANCH_NAME: ${{ github.ref_name }}
        COMMIT_SHA: ${{ github.sha }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract Jira issue key
      id: jira
      run: |
        # Extract Jira issue key from branch name (e.g., feature/PID-8-description -> PID-8)
        BRANCH_NAME="${{ github.ref_name }}"
        ISSUE_KEY=$(echo "$BRANCH_NAME" | grep -oE '[A-Z]+-[0-9]+' | head -1)
        
        if [ -z "$ISSUE_KEY" ]; then
          echo "No Jira issue key found in branch name: $BRANCH_NAME"
          echo "issue_key=" >> $GITHUB_OUTPUT
        else
          echo "Found Jira issue key: $ISSUE_KEY"
          echo "issue_key=$ISSUE_KEY" >> $GITHUB_OUTPUT
        fi
    
    - name: Login to Jira
      if: steps.jira.outputs.issue_key != ''
      uses: atlassian/gajira-login@master
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
    
    - name: Create Jira deployment
      if: steps.jira.outputs.issue_key != ''
      uses: atlassian/gajira-deployments@master
      with:
        issue: ${{ steps.jira.outputs.issue_key }}
        environment: 'development'
        state: 'successful'
        deploymentSequenceNumber: ${{ github.run_number }}
        displayName: 'Deploy to Dev - ${{ github.ref_name }}'
        description: |
          Automated deployment from feature branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Workflow: ${{ github.workflow }}
          Run ID: ${{ github.run_id }}
    
    - name: Add comment to Jira issue
      if: steps.jira.outputs.issue_key != ''
      uses: atlassian/gajira-comment@master
      with:
        issue: ${{ steps.jira.outputs.issue_key }}
        comment: |
          üöÄ *Deployment Successful*
          
          Branch: `${{ github.ref_name }}`
          Commit: `${{ github.sha }}`
          Environment: Development
          
          View deployment details: [GitHub Actions Run|${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}]
    
    - name: Deployment summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment:** Development" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ‚úÖ Successful" >> $GITHUB_STEP_SUMMARY
        
        if [ -n "${{ steps.jira.outputs.issue_key }}" ]; then
          echo "- **Jira Issue:** [${{ steps.jira.outputs.issue_key }}](${{ secrets.JIRA_URL }}/browse/${{ steps.jira.outputs.issue_key }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Jira Notification:** ‚úÖ Sent" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Jira Notification:** ‚ö†Ô∏è No issue key found in branch name" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Notify on failure
      if: failure()
      uses: atlassian/gajira-comment@master
      with:
        issue: ${{ steps.jira.outputs.issue_key }}
        comment: |
          ‚ùå *Deployment Failed*
          
          Branch: `${{ github.ref_name }}`
          Commit: `${{ github.sha }}`
          Environment: Development
          
          Please check the deployment logs: [GitHub Actions Run|${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}]
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
